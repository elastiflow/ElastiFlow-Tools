#!/bin/bash

# Configuration
LOG_FILE="/var/log/monitor_low_watermark.log"
MAX_LOG_AGE=30
SERVICE_NAME="flowcoll.service"
ES_HOST="http://localhost:9200"
ES_USER="your_elastic_username"
ES_PASSWORD="your_elastic_password"

# Function to log messages
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> $LOG_FILE
}

# Function to check low watermark and take action
check_low_watermark() {
    log "Checking low watermark setting from Elasticsearch."

    # Get the low watermark setting from Elasticsearch
    LOW_WATERMARK=$(curl -s -u $ES_USER:$ES_PASSWORD -X GET "$ES_HOST/_cluster/settings?include_defaults=true" \
        | jq -r '.defaults["cluster.routing.allocation.disk.watermark.low"]')
    
    # Get the current free disk space and Elasticsearch index usage
    DISK_USAGE=$(df / | awk 'NR==2 {print $5}' | sed 's/%//')
    FREE_DISK_SPACE=$(df -h / | awk 'NR==2 {print $4}')
    ES_DISK_USAGE=$(du -sh /var/lib/elasticsearch | awk '{print $1}')
    
    log "Low watermark: $LOW_WATERMARK, Current disk usage: $DISK_USAGE%, Free disk space: $FREE_DISK_SPACE, Elasticsearch disk usage: $ES_DISK_USAGE."

    if [[ $LOW_WATERMARK == *"%" ]]; then
        LOW_WATERMARK=${LOW_WATERMARK%\%}
    else
        LOW_WATERMARK=${LOW_WATERMARK//[^0-9]/}
    fi

    if [ "$DISK_USAGE" -ge "$LOW_WATERMARK" ]; then
        log "Disk usage has breached the low watermark. Stopping and disabling $SERVICE_NAME."
        systemctl stop $SERVICE_NAME
        systemctl disable $SERVICE_NAME
    else
        log "Disk usage is within acceptable limits."
    fi
}

# Function to prune old log entries
prune_logs() {
    log "Pruning log entries older than $MAX_LOG_AGE days."
    awk -v max_age=$MAX_LOG_AGE '
    BEGIN {
        cmd = "date -d \"" max_age " days ago\" +%Y-%m-%d"
        cmd | getline cutoff_date
        close(cmd)
    }
    {
        split($1, date, "-")
        log_date = date[1] "-" date[2] "-" date[3]
        if (log_date >= cutoff_date) {
            print
        }
    }
    ' $LOG_FILE > $LOG_FILE.tmp && mv $LOG_FILE.tmp $LOG_FILE
}

# Main script execution
log "Starting low watermark monitoring service."
while true; do
    check_low_watermark
    prune_logs
    sleep 3600 # Check every hour
done
